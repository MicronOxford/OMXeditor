# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.31
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _seb
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types



def toppercentile(*args):
  """toppercentile(int array1d, int nPixel, int max, double percentile) -> int"""
  return _seb.toppercentile(*args)

def T_cplxi(*args):
  """T_cplxi(complex32 array1d)"""
  return _seb.T_cplxi(*args)

def T_real5(*args):
  """T_real5(float shortList)"""
  return _seb.T_real5(*args)

def T_outArrTest(*args):
  """T_outArrTest(int a, int p_Out2d, int p_nx, int p_ny)"""
  return _seb.T_outArrTest(*args)

def T_arr1d(*args):
  """T_arr1d(int a, int p_Out1d, int p_nx)"""
  return _seb.T_arr1d(*args)

def T_test(*args):
  """T_test(short array3d)"""
  return _seb.T_test(*args)

def T_test2d(*args):
  """T_test2d(unsigned short array2d)"""
  return _seb.T_test2d(*args)

def T_newtest(*args):
  """T_newtest(char oStr, int oN)"""
  return _seb.T_newtest(*args)

def T_1newtest(*args):
  """T_1newtest() -> int"""
  return _seb.T_1newtest(*args)

def T_qq(*args):
  """T_qq(int qwer)"""
  return _seb.T_qq(*args)

def T_call(*args):
  """T_call(char module, char func)"""
  return _seb.T_call(*args)

def my_PyErr_SetInterrupt(*args):
  """my_PyErr_SetInterrupt()"""
  return _seb.my_PyErr_SetInterrupt(*args)

def trans2d(*args):
  """trans2d(float array2d, float array2d, double shortList)"""
  return _seb.trans2d(*args)

def binterp2d(*args):
  """
    binterp2d(float array2d, float array2d, double shortList, double xc, 
        double yc, double xt, double yt)
    """
  return _seb.binterp2d(*args)

def rot3d(*args):
  """
    rot3d(float array00d, float array3d, double shortList, int interp, 
        double xoff, double yoff, double zoff, 
        double xc, double yc, double zc)
    """
  return _seb.rot3d(*args)

PyBuffer_FromMemory = _seb.PyBuffer_FromMemory
PyBuffer_FromReadWriteMemory = _seb.PyBuffer_FromReadWriteMemory

def findMax(*args):
  """
    findMax(unsigned char array3d, int oz, int oy, int ox) -> unsigned char
    findMax(short array3d, int oz, int oy, int ox) -> short
    findMax(float array3d, int oz, int oy, int ox) -> float
    findMax(unsigned short array3d, int oz, int oy, int ox) -> unsigned short
    findMax(int array3d, int oz, int oy, int ox) -> int
    findMax(double array3d, int oz, int oy, int ox) -> double
    findMax(unsigned int array3d, int oz, int oy, int ox) -> unsigned int
    findMax(long array3d, int oz, int oy, int ox) -> long
    """
  return _seb.findMax(*args)

def findMin(*args):
  """
    findMin(unsigned char array3d, int oz, int oy, int ox) -> unsigned char
    findMin(short array3d, int oz, int oy, int ox) -> short
    findMin(float array3d, int oz, int oy, int ox) -> float
    findMin(unsigned short array3d, int oz, int oy, int ox) -> unsigned short
    findMin(int array3d, int oz, int oy, int ox) -> int
    findMin(double array3d, int oz, int oy, int ox) -> double
    findMin(unsigned int array3d, int oz, int oy, int ox) -> unsigned int
    findMin(long array3d, int oz, int oy, int ox) -> long
    """
  return _seb.findMin(*args)

def mean(*args):
  """
    mean(unsigned char array1d) -> double
    mean(short array1d) -> double
    mean(float array1d) -> double
    mean(unsigned short array1d) -> double
    mean(int array1d) -> double
    mean(double array1d) -> double
    mean(unsigned int array1d) -> double
    mean(long array1d) -> double
    """
  return _seb.mean(*args)

def mean2(*args):
  """
    mean2(unsigned char array1d, double OUTPUT) -> double
    mean2(short array1d, double OUTPUT) -> double
    mean2(float array1d, double OUTPUT) -> double
    mean2(unsigned short array1d, double OUTPUT) -> double
    mean2(int array1d, double OUTPUT) -> double
    mean2(double array1d, double OUTPUT) -> double
    mean2(unsigned int array1d, double OUTPUT) -> double
    mean2(long array1d, double OUTPUT) -> double
    """
  return _seb.mean2(*args)

def median(*args):
  """
    median(unsigned char array1d) -> double
    median(short array1d) -> double
    median(float array1d) -> double
    median(unsigned short array1d) -> double
    median(int array1d) -> double
    median(double array1d) -> double
    median(unsigned int array1d) -> double
    median(long array1d) -> double
    """
  return _seb.median(*args)

def median2(*args):
  """
    median2(unsigned char array1d, double OUTPUT) -> double
    median2(short array1d, double OUTPUT) -> double
    median2(float array1d, double OUTPUT) -> double
    median2(unsigned short array1d, double OUTPUT) -> double
    median2(int array1d, double OUTPUT) -> double
    median2(double array1d, double OUTPUT) -> double
    median2(unsigned int array1d, double OUTPUT) -> double
    median2(long array1d, double OUTPUT) -> double
    """
  return _seb.median2(*args)

def clip(*args):
  """
    clip(unsigned char array1d, double min, double max)
    clip(short array1d, double min, double max)
    clip(float array1d, double min, double max)
    clip(unsigned short array1d, double min, double max)
    clip(int array1d, double min, double max)
    clip(double array1d, double min, double max)
    clip(unsigned int array1d, double min, double max)
    clip(long array1d, double min, double max)
    """
  return _seb.clip(*args)

def center(*args):
  """
    center(unsigned char array3d, double ox, double oy, double oz)
    center(short array3d, double ox, double oy, double oz)
    center(float array3d, double ox, double oy, double oz)
    center(unsigned short array3d, double ox, double oy, double oz)
    center(int array3d, double ox, double oy, double oz)
    center(double array3d, double ox, double oy, double oz)
    center(unsigned int array3d, double ox, double oy, double oz)
    center(long array3d, double ox, double oy, double oz)
    """
  return _seb.center(*args)

def addNoise(*args):
  """
    addNoise(unsigned char array1d, unsigned char maxRand)
    addNoise(short array1d, short maxRand)
    addNoise(float array1d, float maxRand)
    addNoise(unsigned short array1d, unsigned short maxRand)
    addNoise(int array1d, int maxRand)
    addNoise(double array1d, double maxRand)
    addNoise(unsigned int array1d, unsigned int maxRand)
    addNoise(long array1d, long maxRand)
    """
  return _seb.addNoise(*args)

def addShell(*args):
  """
    addShell(unsigned char array3d, int z0, int y0, int x0, int rmin, 
        int rmax, unsigned char val)
    addShell(short array3d, int z0, int y0, int x0, int rmin, int rmax, 
        short val)
    addShell(float array3d, int z0, int y0, int x0, int rmin, int rmax, 
        float val)
    addShell(unsigned short array3d, int z0, int y0, int x0, int rmin, 
        int rmax, unsigned short val)
    addShell(int array3d, int z0, int y0, int x0, int rmin, int rmax, 
        int val)
    addShell(double array3d, int z0, int y0, int x0, int rmin, int rmax, 
        double val)
    addShell(unsigned int array3d, int z0, int y0, int x0, int rmin, 
        int rmax, unsigned int val)
    addShell(long array3d, int z0, int y0, int x0, int rmin, int rmax, 
        long val)
    """
  return _seb.addShell(*args)

def histogram(*args):
  """
    histogram(unsigned char array1d, double min, double max, int array1d)
    histogram(short array1d, double min, double max, int array1d)
    histogram(float array1d, double min, double max, int array1d)
    histogram(unsigned short array1d, double min, double max, int array1d)
    histogram(int array1d, double min, double max, int array1d)
    histogram(double array1d, double min, double max, int array1d)
    histogram(unsigned int array1d, double min, double max, int array1d)
    histogram(long array1d, double min, double max, int array1d)
    """
  return _seb.histogram(*args)

def histogram2(*args):
  """
    histogram2(unsigned char array1d, double min, double max, int array1d, 
        unsigned char OUTPUT, unsigned char OUTPUT, 
        double OUTPUT, double OUTPUT)
    histogram2(short array1d, double min, double max, int array1d, 
        short OUTPUT, short OUTPUT, double OUTPUT, double OUTPUT)
    histogram2(float array1d, double min, double max, int array1d, 
        float OUTPUT, float OUTPUT, double OUTPUT, double OUTPUT)
    histogram2(unsigned short array1d, double min, double max, int array1d, 
        unsigned short OUTPUT, unsigned short OUTPUT, 
        double OUTPUT, double OUTPUT)
    histogram2(int array1d, double min, double max, int array1d, int OUTPUT, 
        int OUTPUT, double OUTPUT, double OUTPUT)
    histogram2(double array1d, double min, double max, int array1d, 
        double OUTPUT, double OUTPUT, double OUTPUT, 
        double OUTPUT)
    histogram2(unsigned int array1d, double min, double max, int array1d, 
        unsigned int OUTPUT, unsigned int OUTPUT, 
        double OUTPUT, double OUTPUT)
    histogram2(long array1d, double min, double max, int array1d, 
        long OUTPUT, long OUTPUT, double OUTPUT, double OUTPUT)
    """
  return _seb.histogram2(*args)

def mmms(*args):
  """
    mmms(unsigned char array1d, unsigned char OUTPUT, unsigned char OUTPUT, 
        double OUTPUT, double OUTPUT)
    mmms(short array1d, short OUTPUT, short OUTPUT, double OUTPUT, 
        double OUTPUT)
    mmms(float array1d, float OUTPUT, float OUTPUT, double OUTPUT, 
        double OUTPUT)
    mmms(unsigned short array1d, unsigned short OUTPUT, unsigned short OUTPUT, 
        double OUTPUT, double OUTPUT)
    mmms(int array1d, int OUTPUT, int OUTPUT, double OUTPUT, 
        double OUTPUT)
    mmms(double array1d, double OUTPUT, double OUTPUT, double OUTPUT, 
        double OUTPUT)
    mmms(unsigned int array1d, unsigned int OUTPUT, unsigned int OUTPUT, 
        double OUTPUT, double OUTPUT)
    mmms(long array1d, long OUTPUT, long OUTPUT, double OUTPUT, 
        double OUTPUT)
    """
  return _seb.mmms(*args)

def bin2d(*args):
  """
    bin2d(unsigned char array2d, float array2d, int binX, int binY)
    bin2d(short array2d, float array2d, int binX, int binY)
    bin2d(float array2d, float array2d, int binX, int binY)
    bin2d(unsigned short array2d, float array2d, int binX, int binY)
    bin2d(int array2d, float array2d, int binX, int binY)
    bin2d(double array2d, float array2d, int binX, int binY)
    bin2d(unsigned int array2d, float array2d, int binX, int binY)
    bin2d(long array2d, float array2d, int binX, int binY)
    """
  return _seb.bin2d(*args)

def correlate(*args):
  """
    correlate(unsigned char array1d, unsigned char array1d) -> double
    correlate(unsigned char array1d, short array1d) -> double
    correlate(unsigned char array1d, float array1d) -> double
    correlate(unsigned char array1d, unsigned short array1d) -> double
    correlate(unsigned char array1d, int array1d) -> double
    correlate(unsigned char array1d, double array1d) -> double
    correlate(unsigned char array1d, unsigned int array1d) -> double
    correlate(unsigned char array1d, long array1d) -> double
    correlate(short array1d, unsigned char array1d) -> double
    correlate(short array1d, short array1d) -> double
    correlate(short array1d, float array1d) -> double
    correlate(short array1d, unsigned short array1d) -> double
    correlate(short array1d, int array1d) -> double
    correlate(short array1d, double array1d) -> double
    correlate(short array1d, unsigned int array1d) -> double
    correlate(short array1d, long array1d) -> double
    correlate(float array1d, unsigned char array1d) -> double
    correlate(float array1d, short array1d) -> double
    correlate(float array1d, float array1d) -> double
    correlate(float array1d, unsigned short array1d) -> double
    correlate(float array1d, int array1d) -> double
    correlate(float array1d, double array1d) -> double
    correlate(float array1d, unsigned int array1d) -> double
    correlate(float array1d, long array1d) -> double
    correlate(unsigned short array1d, unsigned char array1d) -> double
    correlate(unsigned short array1d, short array1d) -> double
    correlate(unsigned short array1d, float array1d) -> double
    correlate(unsigned short array1d, unsigned short array1d) -> double
    correlate(unsigned short array1d, int array1d) -> double
    correlate(unsigned short array1d, double array1d) -> double
    correlate(unsigned short array1d, unsigned int array1d) -> double
    correlate(unsigned short array1d, long array1d) -> double
    correlate(int array1d, unsigned char array1d) -> double
    correlate(int array1d, short array1d) -> double
    correlate(int array1d, float array1d) -> double
    correlate(int array1d, unsigned short array1d) -> double
    correlate(int array1d, int array1d) -> double
    correlate(int array1d, double array1d) -> double
    correlate(int array1d, unsigned int array1d) -> double
    correlate(int array1d, long array1d) -> double
    correlate(double array1d, unsigned char array1d) -> double
    correlate(double array1d, short array1d) -> double
    correlate(double array1d, float array1d) -> double
    correlate(double array1d, unsigned short array1d) -> double
    correlate(double array1d, int array1d) -> double
    correlate(double array1d, double array1d) -> double
    correlate(double array1d, unsigned int array1d) -> double
    correlate(double array1d, long array1d) -> double
    correlate(unsigned int array1d, unsigned char array1d) -> double
    correlate(unsigned int array1d, short array1d) -> double
    correlate(unsigned int array1d, float array1d) -> double
    correlate(unsigned int array1d, unsigned short array1d) -> double
    correlate(unsigned int array1d, int array1d) -> double
    correlate(unsigned int array1d, double array1d) -> double
    correlate(unsigned int array1d, unsigned int array1d) -> double
    correlate(unsigned int array1d, long array1d) -> double
    correlate(long array1d, unsigned char array1d) -> double
    correlate(long array1d, short array1d) -> double
    correlate(long array1d, float array1d) -> double
    correlate(long array1d, unsigned short array1d) -> double
    correlate(long array1d, int array1d) -> double
    correlate(long array1d, double array1d) -> double
    correlate(long array1d, unsigned int array1d) -> double
    correlate(long array1d, long array1d) -> double
    """
  return _seb.correlate(*args)

def generalhist(*args):
  """
    generalhist(unsigned char array1d, unsigned char array1d, double min, 
        double max, unsigned char array1d)
    generalhist(unsigned char array1d, short array1d, double min, double max, 
        short array1d)
    generalhist(unsigned char array1d, float array1d, double min, double max, 
        float array1d)
    generalhist(unsigned char array1d, unsigned short array1d, double min, 
        double max, unsigned short array1d)
    generalhist(unsigned char array1d, int array1d, double min, double max, 
        int array1d)
    generalhist(unsigned char array1d, double array1d, double min, 
        double max, double array1d)
    generalhist(unsigned char array1d, unsigned int array1d, double min, 
        double max, unsigned int array1d)
    generalhist(unsigned char array1d, long array1d, double min, double max, 
        long array1d)
    generalhist(short array1d, unsigned char array1d, double min, double max, 
        unsigned char array1d)
    generalhist(short array1d, short array1d, double min, double max, 
        short array1d)
    generalhist(short array1d, float array1d, double min, double max, 
        float array1d)
    generalhist(short array1d, unsigned short array1d, double min, 
        double max, unsigned short array1d)
    generalhist(short array1d, int array1d, double min, double max, 
        int array1d)
    generalhist(short array1d, double array1d, double min, double max, 
        double array1d)
    generalhist(short array1d, unsigned int array1d, double min, double max, 
        unsigned int array1d)
    generalhist(short array1d, long array1d, double min, double max, 
        long array1d)
    generalhist(float array1d, unsigned char array1d, double min, double max, 
        unsigned char array1d)
    generalhist(float array1d, short array1d, double min, double max, 
        short array1d)
    generalhist(float array1d, float array1d, double min, double max, 
        float array1d)
    generalhist(float array1d, unsigned short array1d, double min, 
        double max, unsigned short array1d)
    generalhist(float array1d, int array1d, double min, double max, 
        int array1d)
    generalhist(float array1d, double array1d, double min, double max, 
        double array1d)
    generalhist(float array1d, unsigned int array1d, double min, double max, 
        unsigned int array1d)
    generalhist(float array1d, long array1d, double min, double max, 
        long array1d)
    generalhist(unsigned short array1d, unsigned char array1d, double min, 
        double max, unsigned char array1d)
    generalhist(unsigned short array1d, short array1d, double min, 
        double max, short array1d)
    generalhist(unsigned short array1d, float array1d, double min, 
        double max, float array1d)
    generalhist(unsigned short array1d, unsigned short array1d, double min, 
        double max, unsigned short array1d)
    generalhist(unsigned short array1d, int array1d, double min, double max, 
        int array1d)
    generalhist(unsigned short array1d, double array1d, double min, 
        double max, double array1d)
    generalhist(unsigned short array1d, unsigned int array1d, double min, 
        double max, unsigned int array1d)
    generalhist(unsigned short array1d, long array1d, double min, double max, 
        long array1d)
    generalhist(int array1d, unsigned char array1d, double min, double max, 
        unsigned char array1d)
    generalhist(int array1d, short array1d, double min, double max, 
        short array1d)
    generalhist(int array1d, float array1d, double min, double max, 
        float array1d)
    generalhist(int array1d, unsigned short array1d, double min, double max, 
        unsigned short array1d)
    generalhist(int array1d, int array1d, double min, double max, int array1d)
    generalhist(int array1d, double array1d, double min, double max, 
        double array1d)
    generalhist(int array1d, unsigned int array1d, double min, double max, 
        unsigned int array1d)
    generalhist(int array1d, long array1d, double min, double max, 
        long array1d)
    generalhist(double array1d, unsigned char array1d, double min, 
        double max, unsigned char array1d)
    generalhist(double array1d, short array1d, double min, double max, 
        short array1d)
    generalhist(double array1d, float array1d, double min, double max, 
        float array1d)
    generalhist(double array1d, unsigned short array1d, double min, 
        double max, unsigned short array1d)
    generalhist(double array1d, int array1d, double min, double max, 
        int array1d)
    generalhist(double array1d, double array1d, double min, double max, 
        double array1d)
    generalhist(double array1d, unsigned int array1d, double min, double max, 
        unsigned int array1d)
    generalhist(double array1d, long array1d, double min, double max, 
        long array1d)
    generalhist(unsigned int array1d, unsigned char array1d, double min, 
        double max, unsigned char array1d)
    generalhist(unsigned int array1d, short array1d, double min, double max, 
        short array1d)
    generalhist(unsigned int array1d, float array1d, double min, double max, 
        float array1d)
    generalhist(unsigned int array1d, unsigned short array1d, double min, 
        double max, unsigned short array1d)
    generalhist(unsigned int array1d, int array1d, double min, double max, 
        int array1d)
    generalhist(unsigned int array1d, double array1d, double min, double max, 
        double array1d)
    generalhist(unsigned int array1d, unsigned int array1d, double min, 
        double max, unsigned int array1d)
    generalhist(unsigned int array1d, long array1d, double min, double max, 
        long array1d)
    generalhist(long array1d, unsigned char array1d, double min, double max, 
        unsigned char array1d)
    generalhist(long array1d, short array1d, double min, double max, 
        short array1d)
    generalhist(long array1d, float array1d, double min, double max, 
        float array1d)
    generalhist(long array1d, unsigned short array1d, double min, double max, 
        unsigned short array1d)
    generalhist(long array1d, int array1d, double min, double max, 
        int array1d)
    generalhist(long array1d, double array1d, double min, double max, 
        double array1d)
    generalhist(long array1d, unsigned int array1d, double min, double max, 
        unsigned int array1d)
    generalhist(long array1d, long array1d, double min, double max, 
        long array1d)
    generalhist(unsigned char array1d, std::complex<(float)> array1d, 
        int n, double min, double max, std::complex<(float)> array1d, 
        int n)
    generalhist(short array1d, std::complex<(float)> array1d, int n, 
        double min, double max, std::complex<(float)> array1d, 
        int n)
    generalhist(float array1d, std::complex<(float)> array1d, int n, 
        double min, double max, std::complex<(float)> array1d, 
        int n)
    generalhist(unsigned short array1d, std::complex<(float)> array1d, 
        int n, double min, double max, std::complex<(float)> array1d, 
        int n)
    generalhist(int array1d, std::complex<(float)> array1d, int n, 
        double min, double max, std::complex<(float)> array1d, 
        int n)
    generalhist(double array1d, std::complex<(float)> array1d, int n, 
        double min, double max, std::complex<(float)> array1d, 
        int n)
    generalhist(unsigned int array1d, std::complex<(float)> array1d, 
        int n, double min, double max, std::complex<(float)> array1d, 
        int n)
    generalhist(long array1d, std::complex<(float)> array1d, int n, 
        double min, double max, std::complex<(float)> array1d, 
        int n)
    """
  return _seb.generalhist(*args)

